name: Python CI
on:
  # Skips build process for changes to only **docs** or **.github** directories.
  push:
    branches:
      - 'main'
    paths:
      - '!.github/**'
      - '!docs/**'
      - '!.gitattributes'
      - '!.gitignore'
      - 'src/**'
  # Enables trigger for pull requests when making changes to **src** directory.
  pull_request:
    branches:
      - 'main'
      - 'development'
    paths:
      - 'src/**'
  workflow_dispatch:
jobs:
  # Runs test suite
  test:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Stable versions
          - python-version: "3.9"
            experimental: false
          - python-version: "3.10"
            experimental: false
          - python-version: "3.11"
            experimental: false
          # Experimental versions
          - python-version: "3.12-dev"
            experimental: true
        # os: [ubuntu-latest, windows-latest, macos-latest]
    name: "Test (python ${{ matrix.python-version }})"
    steps:
      # Fetches remote repository without --progress option.
      #
      # The default behavior of @actions/checkout outputs many noisy lines of
      # status output in the workflow log, which is problematic for log size.
      #
      # Refer to the below PR for updates on this issue:
      # - https://github.com/actions/checkout/pull/1067
      - name: Checkout latest repository commit
        # uses: actions/checkout@v3
        uses: simonbaird/checkout@no-progress-option
        with:
          show-progress: false
          # submodules: recursive
      - name: Install poetry
        run: |
          curl -O -sSL https://install.python-poetry.org/install-poetry.py
          python install-poetry.py -y --version 1.5.0
          echo "PATH=${HOME}/.poetry/bin:${PATH}" >> $GITHUB_ENV
          rm install-poetry.py
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry
          cache-dependency-path: poetry.lock
      - name: Setup Poetry environment
        run: |
          # Use the matrix version instead of the default python version (3.8).
          poetry env use ${{ matrix.python-version }}
      - name: Install test dependencies
        run: |
          poetry install --no-root --with test
      # Run test suites
      - name: Run test suite
        run: |
          poetry run pytest --cov=src -vvv
        env:
          COVERAGE_FILE: ".coverage.${{ matrix.python-version }}"
      # Upload coverage data
      - name: Store coverage file
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: .coverage.${{ matrix.python-version }}
  # Generate coverage branch data and PR comment text
  #
  # Updates `python-coverage-comment-action` branch
  # and edits cached PR comment text reporting test coverage.
  coverage-branch:
    name: Coverage (python >=3.9)
    runs-on: ubuntu-latest
    needs: test
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        id: download
        with:
          name: 'coverage'
      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # If true, will run `coverage combine` before reading the `.coverage` file.
          MERGE_COVERAGE_FILES: true
          # If true, will create an annotation on every line with missing coverage on a pull request.
          ANNOTATE_MISSING_LINES: false
          # Only needed if ANNOTATE_MISSING_LINES is set to true. This parameter allows you to choose between
          # notice, warning and error as annotation type. For more information look here:
          # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-a-notice-message
          ANNOTATION_TYPE: warning
          # An alternative template for the comment for pull requests.
          COMMENT_TEMPLATE: |
            ### Python Coverage: `{{ coverage.info.percent_covered | pct }}`
            
            Line Coverage Summary:
            | (Files)                                    | Diff (Changed Lines)                  | Covered Lines                                                                                                        | Missing Lines                                                                                                        | Excluded Lines                                                                                                         | (Total)                            |
            | ------------------------------------------ | ------------------------------------- | -------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------- | ---------------------------------- |
            | {{ diff_coverage.files.items() | length }} | {{ diff_coverage.num_changed_lines }} | {{ coverage.info.covered_lines }} ({{ (coverage.info.covered_lines|int / coverage.info.num_statements|int) | pct }}) | {{ coverage.info.missing_lines }} ({{ (coverage.info.missing_lines|int / coverage.info.num_statements|int) | pct }}) | {{ coverage.info.excluded_lines }} ({{ (coverage.info.excluded_lines|int / coverage.info.num_statements|int) | pct }}) | {{ coverage.info.num_statements }} |
            
            {%if diff_coverage.files -%}
            <details>
            <summary>Diff Coverage Details (click to unfold)</summary>
            
            | (#)              | File (^Test)                                                                                                                                                                                                                                              | Diff (%)                                                                                                                      | Covered Lines                                                                                                         | Missing Lines                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                | Excluded Lines                                                                                                                                                         | (Total)                                            |
            | ---------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------- || ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------- |
            {% for filename, diff_file_coverage in diff_coverage.files | dictsort -%}
              {%- set list=diff_file_coverage.violation_lines -%}
              {%- set stack={ 'first': None, 'last': None, 'pending': None } -%}
              {%- set output=[] -%}
              {%- for line in list -%}
                {%- if loop.index0 and line == list[loop.index0-1] + 1 -%}
                  {{ stack.update({ 'last': line }) or "" }}
                  {%- set range = stack.first ~ '-' ~ stack.last -%}
                  {{ stack.update({ 'pending': ('#L' ~ range | replace("-", "-L")) }) or "" }}
                {%- else -%}
                  {{ stack.update({ 'first': line, 'last': None, 'pending': '#L' ~ line }) or "" }}
                {%- endif -%}
                {%- if (line+1 != list[loop.index]) -%}
                  {{ output.append(stack['pending']) or "" }}
                {%- endif -%}
              {%- endfor -%}
            | {{ loop.index }} | [`{{ filename | replace("src/", "", 1) }}`](https://github.com/${{github.repository}}/blob/${{github.head_ref}}/{{ filename }}) ([^](https://github.com/${{github.repository}}/blob/${{github.head_ref}}/{{ filename | replace(".py", "_test.py", 1) }})) | {{ "%+.0f" | format((coverage.files[filename].info.percent_covered - diff_file_coverage.percent_covered) | round | float) }}% | {{ coverage.files[filename].info.covered_lines }} ({{ coverage.files[filename].info.percent_covered | float | pct }}) | {%- if diff_file_coverage.violation_lines -%}<details><summary>{{ diff_file_coverage.violation_lines | count }} ({{ ((diff_file_coverage.violation_lines | count) / coverage.files[filename].info.num_statements) | float | pct }})</summary>{% set separator = joiner(", ") %}{% for range in output %}{{ separator() }}[`{{ range | replace('L','') | replace('#','') }}`](https://github.com/${{github.repository}}/blob/${{github.head_ref}}/{{ filename ~ range }}){% endfor %}</details>{%- else -%}`None`{%- endif %} | {{ coverage.files[filename].info.excluded_lines }} ({{ (coverage.files[filename].info.excluded_lines / coverage.files[filename].info.num_statements) | float | pct }}) | {{ coverage.files[filename].info.num_statements }} |
            {% endfor -%}

            </details>
            {%- endif %}

            Last updated: `{{ coverage.meta.timestamp }}`
            
            {{ marker }}
      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v3
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt
