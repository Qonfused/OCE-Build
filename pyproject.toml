[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "oce-build"
version = "0.0.0"
description = "Portable OpenCore EFI dependency & build manager."
authors = [
  "Cory Bennett <csquaredbennett@gmail.com>"
]
maintainers = [
  "Cory Bennett <csquaredbennett@gmail.com>"
]
repository = "https://github.com/Qonfused/OCE-Build"
documentation = "https://oce-build.readthedocs.io/"
classifiers = [
  "Development Status :: 1 - Planning",
  'Environment :: Console',
  "Intended Audience :: Developers",
  'License :: OSI Approved :: BSD License',
  "Topic :: Software Development :: Build Tools",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Operating System :: OS Independent",
  # Python and supported versions
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  # Supporting languages
  "Programming Language :: C++"
]
keywords = [ "cli", "tui", "packaging", "dependency", "opencore" ]
readme = "docs/README.md"
license = "BSD-3-Clause"

  # Requirements
  [tool.poetry.dependencies]
  python = ">=3.8"
  packaging = "^23.0"
  graphlib_backport = { version = "^1.0.0", python = "<3.9" }
  typing_extensions = { version = "^4.2.0", python = "<3.10" }
  
  [tool.poetry.group.dev.dependencies]
  python-dotenv = "^1.0.0"

  # [tool.poetry.group.docs]
  # optional = true
  #   [tool.poetry.group.docs.dependencies]
  #   # TODO

  [tool.poetry.group.test.dependencies]
  pytest = "^7.0.1"
  pytest-cov = ">=3,<5"

  # [tool.poetry.scripts]
  # # TODO

[tool.pytest.ini_options]
addopts = "-rfEX --strict-markers"
python_files = [ "*_test.py" ]
python_functions = [ "test_*" ]

[tool.coverage.run]
relative_files = true
omit = [ "*_test.py" ]

[tool.mypy]
disallow_untyped_defs = true
show_error_codes = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true
exclude = [ "docs", "scripts", "_test\\.py$" ]
ignore_missing_imports = true
